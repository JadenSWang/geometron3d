<a href = "editor.php">editor.php</a>

<input id = "actioninput"/>

<div id = "x3dbox">
    <x3d id = "mainx3d">
        <scene id = "main">
            
            
        </scene>
    </x3d>
</div>

<script>
//http://edutechwiki.unige.ch/en/X3D_grouping_and_transforms
//https://doc.x3dom.org/author/index.html
/*document.getElementById("foo").onclick = function(){
    window.location.href = "editor.php";
}*/

document.getElementById("actioninput").select();
unit = 1;
r = [0,0,0];
xhat = [unit,0,0];
yhat = [0,unit,0];
zhat = [0,0,unit];
solidColor = "1 0 0";
scale3d = 2;
thetaStep = Math.PI;

transformIndex = 0;
currentTable = []; 
for(var index = 0;index < 01777;index ++){
    currentTable.push("");
}

currentTable[0141] = "0731";//a
currentTable[0163] = "0730";//s
currentTable[0144] = "0733";//d
currentTable[0146] = "0732";//f
currentTable[0147] = "0734";//g
currentTable[0150] = "0735";//h

currentTable[0152] = "0736";//j
currentTable[0153] = "0737";//k

currentTable[0172] = "0740";//z
currentTable[0170] = "0741";//x
currentTable[0143] = "0742";//c
currentTable[0166] = "0743";//v

currentTable[061] = "0720";//1
currentTable[062] = "0721";//2
currentTable[063] = "0722";//3
currentTable[064] = "0723";//4
currentTable[065] = "0724";//5
currentTable[066] = "0725";//6
currentTable[067] = "0726";//7

//currentGlyph = "0740,0730,0736,0740,";

currentGlyph = "";
main = document.getElementById("main");
currentx3d = "";
transformIndex = 0;
transforms = [];
doTheThing(0700);
drawGlyph(currentGlyph);
initcursor();

//redraw();
    
function redraw(){
    transformIndex = 0;
    transforms = [];
    main.innerHTML = "";
    doTheThing(0700);
    drawGlyph(currentGlyph);

//  cursort.setAttribute("translation",r[0].toString() + " " + r[1].toString() + " " + r[2].toString() );
    
    initcursor();

}

function initcursor(){
    var news = document.createElement("shape");
    var newt = document.createElement("transform");
    main.appendChild(newt);
    newt.setAttribute("translation",r[0].toString() + " " + r[1].toString() + " " + r[2].toString() );
    var newt2 = document.createElement("transform");
    newt.appendChild(newt2);
    newt2.setAttribute("scale",(0.5*xhat[0]).toString() + " " + (0.5*yhat[1]).toString() + " " + (0.5*zhat[2]).toString());
    newt2.appendChild(news);

    var newa = document.createElement("appearance");
    news.appendChild(newa);
    var newm = document.createElement("material");
    newm.setAttribute("diffuseColor",solidColor);
    newm.setAttribute("transparency","0.85");
    newa.appendChild(newm);
    var newb = document.createElement("box");
    news.appendChild(newb);

    
}

function drawGlyph(localString){
    var tempArray = localString.split(',');
    for(var index = 0;index < tempArray.length;index++){
        doTheThing(parseInt(tempArray[index],8));
    }
}

function doTheThing(localCommand){
    
    if(localCommand == 0700){
        r = [0,0,0];
        xhat = [unit,0,0];
        yhat = [0,unit,0];
        zhat = [0,0,unit];
        scale3d = 2;
        solidColor = "1 0 0";
        
    }
    if(localCommand == 0710){
        scale3d = 2;
    }
    if(localCommand == 0711){
        scale3d = 1.5;//     3/2
    }
    if(localCommand == 0712){
        scale3d = 1.25;//    5/4
    }
    if(localCommand == 0713){
        scale3d = 1.125;//   9/8
    }
    if(localCommand == 0714){
        scale3d = 1.0625;//  17/16
    }

    if(localCommand == 0720){
        solidColor = "1 1 1";
    }
    if(localCommand == 0721){
        solidColor = "1 0 0";
    }
    if(localCommand == 0722){
        solidColor = "0 1 0";
    }
    if(localCommand == 0723){
        solidColor = "0 0 1";
    }
    if(localCommand == 0724){
        solidColor = "0 1 1";
    }
    if(localCommand == 0725){
        solidColor = "1 1 0";
    }
    if(localCommand == 0726){
        solidColor = "1 0 1";
    }
    if(localCommand == 0727){
        solidColor = "0.5 0.5 0.5";
    }


    if(localCommand == 0730){
        r  = [xhat[0] + r[0],xhat[1] + r[1],xhat[2] + r[2]];

        var newt = document.createElement("transform");
        newt.setAttribute("translation", xhat[0].toString() + " " + xhat[1].toString() + " " + xhat[2].toString() );
        if(transformIndex > 0){
            transforms[transformIndex - 1].appendChild(newt);
        }
        else{
            document.getElementById("main").appendChild(newt);
        }
        transforms.push(newt);
        
        transformIndex++;
    }
    if(localCommand == 0731){
        r  = [-xhat[0] + r[0],-xhat[1] + r[1],-xhat[2] + r[2]];
        var newt = document.createElement("transform");
        newt.setAttribute("translation",(-xhat[0]).toString() + " " + (-xhat[1]).toString() + " " + (-xhat[2]).toString() );
        if(transformIndex > 0){
            transforms[transformIndex - 1].appendChild(newt);
        }
        else{
            document.getElementById("main").appendChild(newt);
        }
        transforms.push(newt);
        transformIndex++;
        
    }
    if(localCommand == 0732){
        r  = [yhat[0] + r[0],yhat[1] + r[1],yhat[2] + r[2]];
        var newt = document.createElement("transform");
        newt.setAttribute("translation",yhat[0].toString() + " " + yhat[1].toString() + " " + yhat[2].toString() );
        if(transformIndex > 0){
            transforms[transformIndex - 1].appendChild(newt);
        }
        else{
            document.getElementById("main").appendChild(newt);
        }
        transforms.push(newt);
        transformIndex++;
    }
    if(localCommand == 0733){
        r  = [-yhat[0] + r[0],-yhat[1] + r[1],-yhat[2] + r[2]];
        var newt = document.createElement("transform");
        newt.setAttribute("translation",(-yhat[0]).toString() + " " + (-yhat[1]).toString() + " " + (-yhat[2]).toString() );
        if(transformIndex > 0){
            transforms[transformIndex - 1].appendChild(newt);
        }
        else{
            document.getElementById("main").appendChild(newt);
        }
        transforms.push(newt);
        transformIndex++;
    }
    if(localCommand == 0734){
        r  = [zhat[0] + r[0],zhat[1] + r[1],zhat[2] + r[2]];
        var newt = document.createElement("transform");
        newt.setAttribute("translation",zhat[0].toString() + " " + zhat[1].toString() + " " + zhat[2].toString() );
        if(transformIndex > 0){
            transforms[transformIndex - 1].appendChild(newt);
        }
        else{
            document.getElementById("main").appendChild(newt);
        }
        transforms.push(newt);
        transformIndex++;
    }
    if(localCommand == 0735){
        r  = [-zhat[0] + r[0],-zhat[1] + r[1],-zhat[2] + r[2]];
        var newt = document.createElement("transform");
        newt.setAttribute("translation",(-zhat[0]).toString() + " " + (-zhat[1]).toString() + " " + (-zhat[2]).toString());
        if(transformIndex > 0){
            transforms[transformIndex - 1].appendChild(newt);
        }
        else{
            document.getElementById("main").appendChild(newt);
        }
        transforms.push(newt);
        transformIndex++;
    }
    if(localCommand == 0736){
         xhat = [xhat[0]/scale3d,xhat[1]/scale3d,xhat[2]/scale3d];
         yhat = [yhat[0]/scale3d,yhat[1]/scale3d,yhat[2]/scale3d];
         zhat = [zhat[0]/scale3d,zhat[1]/scale3d,zhat[2]/scale3d];

        var newt = document.createElement("transform");
        newt.setAttribute("scale", (1/scale3d).toString() + " " + (1/scale3d).toString() + " " + (1/scale3d).toString() );
        if(transformIndex > 0){
            transforms[transformIndex - 1].appendChild(newt);
        }
        else{
            document.getElementById("main").appendChild(newt);
        }
        transforms.push(newt);
        
        transformIndex++;

    }
    if(localCommand == 0737){
         xhat = [xhat[0]*scale3d,xhat[1]*scale3d,xhat[2]*scale3d];
         yhat = [yhat[0]*scale3d,yhat[1]*scale3d,yhat[2]*scale3d];
         zhat = [zhat[0]*scale3d,zhat[1]*scale3d,zhat[2]*scale3d];

        var newt = document.createElement("transform");
        newt.setAttribute("scale", scale3d.toString() + " " + scale3d.toString() + " " + scale3d.toString() );
        if(transformIndex > 0){
            transforms[transformIndex - 1].appendChild(newt);
        }
        else{
            document.getElementById("main").appendChild(newt);
        }
        transforms.push(newt);
        
        transformIndex++;

    }
    
    
    if(localCommand == 0740){
        //box
      
        var news = document.createElement("shape");
        var newt = document.createElement("transform");
        main.appendChild(newt);
        newt.setAttribute("translation",r[0].toString() + " " + r[1].toString() + " " + r[2].toString() );
        var newt2 = document.createElement("transform");
        newt.appendChild(newt2);
        newt2.setAttribute("scale",(0.5*xhat[0]).toString() + " " + (0.5*yhat[1]).toString() + " " + (0.5*zhat[2]).toString());
        newt2.appendChild(news);

        var newa = document.createElement("appearance");
        news.appendChild(newa);
        var newm = document.createElement("material");
        newm.setAttribute("diffuseColor",solidColor);
        newa.appendChild(newm);
        var newb = document.createElement("box");
        news.appendChild(newb);
        
    }
    if(localCommand == 0741){
        
        //sphere
      
        var news = document.createElement("shape");
        var newt = document.createElement("transform");
        main.appendChild(newt);
        newt.setAttribute("translation",r[0].toString() + " " + r[1].toString() + " " + r[2].toString() );
        var newt2 = document.createElement("transform");
        newt.appendChild(newt2);
        newt2.setAttribute("scale",(0.5*xhat[0]).toString() + " " + (0.5*yhat[1]).toString() + " " + (0.5*zhat[2]).toString());
        newt2.appendChild(news);

        var newa = document.createElement("appearance");
        news.appendChild(newa);
        var newm = document.createElement("material");
        newm.setAttribute("diffuseColor",solidColor);
        newa.appendChild(newm);
        var newb = document.createElement("sphere");
        news.appendChild(newb);
    }
    if(localCommand == 0742){
        //cylinder
        var news = document.createElement("shape");
        var newt = document.createElement("transform");
        main.appendChild(newt);
        newt.setAttribute("translation",r[0].toString() + " " + r[1].toString() + " " + r[2].toString() );
        var newt2 = document.createElement("transform");
        newt.appendChild(newt2);
        newt2.setAttribute("scale",(0.5*xhat[0]).toString() + " " + (0.5*yhat[1]).toString() + " " + (0.5*zhat[2]).toString());
        newt2.appendChild(news);

        var newa = document.createElement("appearance");
        news.appendChild(newa);
        var newm = document.createElement("material");
        newm.setAttribute("diffuseColor",solidColor);
        newa.appendChild(newm);
        var newb = document.createElement("cylinder");
        news.appendChild(newb);
    }
    if(localCommand == 0743){
        
        //cone
        var news = document.createElement("shape");
        var newt = document.createElement("transform");
        main.appendChild(newt);
        newt.setAttribute("translation",r[0].toString() + " " + r[1].toString() + " " + r[2].toString() );
        var newt2 = document.createElement("transform");
        newt.appendChild(newt2);
        newt2.setAttribute("scale",(0.5*xhat[0]).toString() + " " + (0.5*yhat[1]).toString() + " " + (0.5*zhat[2]).toString());
        newt2.appendChild(news);

        var newa = document.createElement("appearance");
        news.appendChild(newa);
        var newm = document.createElement("material");
        newm.setAttribute("diffuseColor",solidColor);
        newa.appendChild(newm);
        var newb = document.createElement("cone");
        news.appendChild(newb);
        
    }
    
    
    
    
}


document.getElementById("actioninput").onkeyup = function(e){
    charCode = e.keyCode || e.which;
    if(charCode == 010){
        console.log("foo");
        var glypharray = currentGlyph.split(",");
        var newglyph = "";
        for(var index =0;index < glypharray.length-1;index++){
            newglyph += glypharray[index] + ",";
        }
        currentGlyph = newglyph;
        redraw();
    }
    
    
}

document.getElementById("actioninput").onkeypress = function(a){//action
    charCode = a.keyCode || a.which;
    if(charCode != 010){
        if(parseInt(currentTable[charCode],8) >= 0700){
            currentGlyph +=  currentTable[charCode] + ",";
        } 
        this.value = "";
        redraw();
    }

}


</script>
<style>
#mainx3d{
    position:absolute;
    left:0px;
    right:0px;
    bottom:0px;
    top:0px;
}
#x3dbox{
    position:absolute;
    left:100px;
    right:100px;
    top:40px;
    bottom:100px;
}
#actioninput{
    position:absolute;
    right:0px;
    top:0px;
    border:solid;
    width:1em;
    border-radius:5px;
    border-color:green;
}
</style>